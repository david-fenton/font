$icon-font-family: PreviousNextPlugin;
$icon-font-path: '../fonts' !default;

@font-face {
  font-family: $icon-font-family;
  src: url('#{$icon-font-path}/PreviousNextPlugin.eot?#iefix') format('eot');
}
@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAOYAAoAAAAABfwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAAA9AAAADwAAABWOtNHg2NtYXAAAAEwAAAAOgAAAUriFBC2Z2x5ZgAAAWwAAAA6AAAASBVXhZZoZWFkAAABqAAAAC4AAAA2BC+2G2hoZWEAAAHYAAAAGgAAACQAdgBEaG10eAAAAfQAAAAMAAAADADAAABsb2NhAAACAAAAAAgAAAAIABIAJG1heHAAAAIIAAAAHwAAACABDgAUbmFtZQAAAigAAAFDAAACjgE7ioBwb3N0AAADbAAAACoAAABCNlg5SXicY2BkcGCcwMDKwMGgwaDDwACn5RiYGQQYGJgYWJkZsIKANNcUBoePjB+ZGByAXFYwycDACCIA3dMF1XicY2BgYGaAYBkGRgYQcAHyGMF8FgYNIM0GpBkZmBgYPjL9/w9S8JERRPMzQNUDASMbw4gHAHBLBrkAAHicY2BkAAEdBgsGdgYGc1NjUXNRdVEBDhERDgMxER0RMZAsRI0BVI2osim7qbipAVCNBVwNALeoBYUAAHicY2BkYGAA4iPP7zjH89t8ZeBmcACKMFwq2BOMTDMYMFgASQ4GJhAHAEBiCcsAAHicY2BkYGBwAGJWMMnAYMDAyIAKmAEScgC7AAAAQAAAAEAAAABAAAAAAAAAABIAJHicY2BkYGBgZuBgANEMDExAzAWEDAz/wXwGAAl6ASMAeJyNjctKw0AYhc/0JrYgUkFwl0URQUgvy4Lb1oWU0EUX7tJ2kqZMM2EyKe0D+A6ufQ7XLnwYn8GTOCu76QyE7//+cyYArvEFgfIIdKtveWq44PTHddKd4wb50XETHTw5btE/O24z8eq4gxu88QXRuKTp4d1xDVf4dFyn/3bcIP84buJWdB230BMPjttYiBfHHdyLj8DIfaKLfCYPNlBFnKRzGRcqNKeLU7OQJk906g39welyKlNpQivX3vLo5ft4ZG3kRUbvvIlOrVRKe5nRW7my/sbabNzvR877K71DAAOJPRJoFMgx43SApVecY/oUc7qYk0LI9DmNczILOsNdmUnhYQgfg7OaU7q0aofcSKzZXuLIb85mjBGtRcQ5YkZjR5pUfynTilfTZNVuS7Oi97GpWhnG6PNG//I+U3zpFw/9f9cAeJxjYGLAD5gZGBiZGJl5C4pSyzLzS4t1M5Pz8zjzUitKwCwGBgCCuwkLAAA=) format('woff'),
       url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
  font-weight: normal;
  font-style: normal;
}

// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
$icons: (
		previous-icon: '\f101',
		next-icon: '\f102',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\25b6"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: $content;
    }
  }
}
